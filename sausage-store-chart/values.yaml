global:
  imagePullPolicy: Always
  vault:
    host: ip
    name: vault
    vaultToken: someToken

frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: kirillpudov.students-projects.ru
    path: /
    pathType: Prefix
  containerPort: 80
  image_tag: latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "250m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
  ### Опишите стратегию RollingUpdate для бэкенда
  image: YOUR_DOCKERHUB/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
  vpa:
  ### Опишите VPA для бэкенда

backend-report:
  replicas: 1
  strategy:
    type: Recreate
  image: d1zero/sausage-backend-report:latest
  service:
    port: 8081
  config:
    port: 8080
  containerPort: 8080
  secret:
    dbport: 27017
    dbhost: mongodb
    dbname: sausage-store
    dbuser: reports
    dbpassword: reportspassword
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 400m
      memory: 256Mi
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

infra:
  postgresql:
    replicas: 1
    image: postgres:14
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_PASSWORD: storepassword
      POSTGRES_USER: store
      POSTGRES_DATA: /var/lib/postgresql/data/pgdata
    containerPort: 5432

  mongodb:
    replicas: 1
    image: mongo:7.0
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 400m
        memory: 256Mi
    env:
      MONGO_INITDB_DATABASE: sausage-store
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_USERNAME: reports
      MONGO_INITDB_PASSWORD: reportspassword
    containerPort: 27017

  mongodbInit:
    image: mongo:7.0
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 50m
        memory: 128Mi
