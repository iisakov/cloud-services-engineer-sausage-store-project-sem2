name: Sausage Store Deploy

on:
  push:
    branches:
      - main

jobs:
#  # Сборка и пуш образов в докерхаб:
#  build_and_push_to_docker_hub:
#      name: Push Docker image to DockerHub
#      runs-on: ubuntu-latest
#      steps:
#        - name: Check out the repo
#          # Получение исходного кода из репозитория:
#          uses: actions/checkout@v3
#        - name: Set up Docker Buildx
#          # Установка сборщика контейнеров Docker:
#          uses: docker/setup-buildx-action@v2
#        - name: Login to Docker
#          # Авторизация на Docker Hub:
#          uses: docker/login-action@v2
#          # При помощи with передаём в action параметры username и password:
#          with:
#            username: ${{ secrets.DOCKER_USER }}
#            password: ${{ secrets.DOCKER_PASSWORD }}
#            # Хорошо ли держать логин и пароль прямо в коде workflow?
#            # Нет, это нехорошо. Хранить пароль надо в Secrets.
#        - name: Push Backend to DockerHub
#          # Одновременный билд и пуш образа в Docker Hub:
#          uses: docker/build-push-action@v4
#          with:
#            # Параметр context: ./backend/ указывает, что нужный Dockerfile
#            # находится в ./backend/
#            context: ./backend/
#            # Параметр push: true указывает, что образ нужно не только собрать,
#            # но и отправить на Docker Hub:
#            push: true
#            # В параметре tags задаётся название и тег для образа.
#            # Для каждого пересобранного образа
#            # устанавливаем тег latest, чтобы потом
#            # на сервере и в docker-compose.yml не указывать версию образа:
#            tags: iisakov/sausage-backend:latest
#            build-args: |
#              VERSION=${{ github.sha }}
#        - name: Push Frontend to DockerHub
#          uses: docker/build-push-action@v4
#          with:
#            context: ./frontend/
#            push: true
#            tags: iisakov/sausage-frontend:latest
#        - name: Push Backend-report to DockerHub
#          uses: docker/build-push-action@v4
#          with:
#            context: ./backend-report/
#            push: true
#            tags: iisakov/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
    name: Add Helm chart to Nexus
    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Install helm-push plugin
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: Add Nexus Helm repo
        run: |
          helm repo add nexus ${{ secrets.NEXUS_HELM_REPO }} \
            --username ${{ secrets.NEXUS_HELM_REPO_USER }} \
            --password ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}

      - name: Push Helm chart to Nexus using cm-push
        run: |
          cd sausage-store-chart
          helm cm-push --context-path="/repository/${{ secrets.NEXUS_HELM_REPO_NAME }}" . nexus

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
    name: Deploy Helm chart to Kubernetes
    runs-on: ubuntu-latest
    needs: add_helm_chart_to_nexus

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Add Nexus Helm repo
        run: |
          helm repo add nexus ${{ secrets.NEXUS_HELM_REPO }} \
            --username ${{ secrets.NEXUS_HELM_REPO_USER }} \
            --password ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
          helm repo update

      - name: Setup kubeconfig
        shell: bash
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFaIG }}" > ~/.kube/config

      - name: Deploy Helm chart
        run: |
          helm upgrade --install sausage-store nexus/sausage-store \
            --namespace ${{ secrets.KUBE_NAMESPACE }}