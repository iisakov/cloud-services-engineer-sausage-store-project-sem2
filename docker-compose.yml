version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: sausage-postgres
    environment:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sausage-network
    restart: unless-stopped

  mongodb:
    image: mongo:6-jammy
    container_name: sausage-mongo
    environment:
      MONGO_INITDB_DATABASE: reports
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - sausage-network
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        VERSION: "1.0.0"
    depends_on:
      - postgres
      - mongodb
    environment:
      - POSTGRES_URI=jdbc:postgresql://postgresql:5432/sausage-store
      - POSTGRES_USER=store
      - POSTGRES_PASSWORD=storepassword
      - REPORT_PATH=/logs/reports
      - LOG_PATH=/logs
    networks:
      - sausage-network

  backend-report:
    build:
      context: ./backend-report
      dockerfile: Dockerfile
    container_name: sausage-backend-report
    environment:
      DB: mongodb://mongodb:27017/reports
      PORT: 8080
    ports:
      - "8081:8080"
    depends_on:
      - mongodb

    networks:
      - sausage-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sausage-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - sausage-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: sausage-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sausage.store
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - sausage-network
    restart: unless-stopped

networks:
  sausage-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local